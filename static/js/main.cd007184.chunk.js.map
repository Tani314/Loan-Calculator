{"version":3,"sources":["components/media-queries.js","components/LoanCalculator.js","App.js","reportWebVitals.js","index.js"],"names":["sizes","desktop","tablet","phone","media","Object","keys","reduce","object","label","css","Container","styled","div","Wrapper","AllContainer","mediaQueries","Form","form","InputSection","Input","input","SubmitButton","button","Error","h4","Result","Hr","hr","Span","span","LoanCalculator","useState","amount","interest","years","months","userValues","setUserValues","monthlyPayment","totalPayment","totalInterest","results","setResults","error","setError","handleInputChange","event","e","target","name","value","y","mo","timeChange","calculateResults","userAmount","Number","calculatedInterest","calculatedPayments","x","Math","pow","monthly","isFinite","monthlyPaymentCalculated","toFixed","totalPaymentCalculated","trunc","totalInterestCalculated","onSubmit","preventDefault","actualError","isNaN","isValid","type","onChange","toString","replace","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd007184.chunk.js","sourcesContent":["import { css } from 'styled-components';\n\nconst sizes = {\n  desktop: 1024,\n  tablet: 768,\n  phone: 320,\n};\n\nconst media = Object.keys(sizes).reduce((object, label) => {\n  object[label] = (...args) => css`\n    @media (min-width: ${sizes[label]}px) {\n      ${css(...args)}\n    }\n  `;\n\n  return object;\n}, {});\n\nexport default media;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport mediaQueries from './media-queries';\n\nconst Container = styled.div`\ndisplay: flex;\njustify-content: center;\n`\nconst Wrapper = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\npadding: 25px;\nh1{\n    font-size: 45px;\n    font-weight: bold;\n    margin-bottom: 10px;\n}\np{\n    background-color: #fff; \n    padding: 1rem;\n}  \n`;\n\nconst AllContainer = styled.div`\ndisplay: flex:\nflex-direction: column;\npadding: 10px;\n${mediaQueries.desktop`\n    display: flex;\n    flex-direction: row;\n    flex: 1 0 0%;\n`}\n\n`\n\nconst Form = styled.form`\nbackground-color: #f0f0f2;\nalign-items: left;\npadding: 75px 50px 40px 60px;\n`\n\nconst InputSection = styled.div`\npadding-bottom: 1rem;\ndisplay: flex;\nalign-items: left;\nflex-direction: column;\n`\n\nconst Input = styled.input`\nwidth: 100%;\npadding: 12px 20px;\ndisplay: inline-block;\nborder: 1px solid #ccc;\nborder-radius: 4px;\nbox-sizing: border-box;\n&:hover {\n    border-width: 2px;\n    border-color:#ffa500;\n  }\n`\n\nconst SubmitButton = styled.button`\nbackground-color: #726969;\ncolor: white;\nborder: none;\nborder-radius: 2.5px;\nfont-weight:bold;\nfont-size: 15px;\nmargin: 10px 0px 0px 150px;\npadding: 13px 20px;\nletter-spacing: 1px;\ncursor: pointer;\n&:hover{\n    opacity: 0.8;\n}\n`\nconst Error = styled.h4`\ncolor:red;\nfont-size:13px;\nmargin-bottom: 1rem;\n`\nconst Result = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nbackground-color: white;\npadding: 75px ;\n`\n\nconst Hr = styled.hr`\nwidth:100%;\n`\nconst Span = styled.span`\nbackground-color:white;\nmargin:  2px;\ndisplay: inline-block;\nborder: 1px solid #ccc;\nborder-radius: 4px;\nbox-sizing: border-box;\npadding: 12px 10px;\ninput{\n    width: 90%;\n    padding: 0px 5px;\n    border: none;  \n}\n&:hover {\n    border-width: 2px;\n    border-color:#ffa500;\n  }\n`\n\nconst LoanCalculator = () => {\n\n    // state to storage the values given by the user when filling the input fields\n    const [userValues, setUserValues] = useState({\n        amount: '5000',\n        interest: '4.5',\n        years: '5',\n        months: '60'\n    });\n\n    // state to storage the results of the calculation\n    const [results, setResults] = useState({\n        monthlyPayment: '93.22',\n        totalPayment: '5000',\n        totalInterest: '592.91',\n    });\n\n    // state to storage error message\n    const [error, setError] = useState('');\n\n    // event handler to update state when the user enters values\n    const timeChange = (e) => {\n        if (e.target.name === 'months' && e.target.value) {\n            let m = e.target.value\n            let y = m / 12\n            setUserValues(userValues.years = y)\n        }\n        else if (e.target.name === 'years' && e.target.value) {\n            let yr = e.target.value\n            let mo = yr * 12\n            setUserValues(userValues.months = mo)\n        }\n    }\n\n    const handleInputChange = (event) => {\n        timeChange(event)\n        setUserValues({ ...userValues, [event.target.name]: event.target.value });\n    }\n    // Manage validations and error messages\n\n    const isValid = () => {\n        const { amount, interest, years, months } = userValues;\n        let actualError = {};\n        if (amount ==='') {\n            actualError.amount = `Invalid loan amount`;\n        }\n        if (isNaN(amount)) {\n            actualError.amount = `Invalid loan amount`;\n        }\n        if (Number(amount) <= 0) {\n            actualError.amount = `Invalid loan amount`;\n        }\n        if (!interest) {\n            actualError.interest = 'Invalid interest rate';\n        }\n        if (isNaN(interest)) {\n            actualError.interest = 'Invalid interest rate';\n        }\n        if (Number(interest) <= 0 || Number(interest) > 99) {\n            actualError.interest = 'Invalid interest rate';\n        }\n\n        if (!years || isNaN(years) || Number(years) <= 0) {\n            actualError.years = 'Invalid loan term';\n        }\n\n        if (!months || isNaN(months) || Number(months) <= 0) {\n            actualError.months = 'Invalid loan term';\n        }\n        if (actualError) {\n            setError(actualError);\n            return false;\n          }\n          return true;\n    };\n\n    // Handle the data submited - validate inputs and send it as a parameter to the function that calculates the loan\n    const handleSubmitValues = (e) => {\n        e.preventDefault();\n        if (isValid()) {\n            setError({});\n        }\n        calculateResults(userValues);\n\n    };\n\n    // Calculation\n    const calculateResults = ({ amount, interest, years }) => {\n        const userAmount = Number(amount);\n        const calculatedInterest = Number(interest) / 100 / 12;\n        const calculatedPayments = Number(years) * 12;\n        const x = Math.pow(1 + calculatedInterest, calculatedPayments);\n        const monthly = (userAmount * x * calculatedInterest) / (x - 1);\n\n        if (isFinite(monthly)) {\n            const monthlyPaymentCalculated = monthly.toFixed(2);\n            const totalPaymentCalculated = Math.trunc(userAmount);\n            const totalInterestCalculated = (\n                monthly * calculatedPayments -\n                userAmount\n            ).toFixed(2);\n\n            // Set up results to the state to be displayed to the user\n            setResults({\n                monthlyPayment: monthlyPaymentCalculated,\n                totalPayment: totalPaymentCalculated,\n                totalInterest: totalInterestCalculated,\n            });\n        }\n        return;\n    };\n\n\n    return (\n        <Container>\n            <Wrapper>\n                <h1>Loan Calculator</h1>\n                <AllContainer>\n\n                    <Form onSubmit={handleSubmitValues}>\n                        <InputSection>\n                            <label>Loan amount</label>\n                            <Error>{error.amount}</Error>\n                            <Span>\n                                $\n                            <input\n                                    type='text'\n                                    name='amount'\n                                    value={userValues.amount}\n                                    onChange={handleInputChange} />\n\n                            </Span>\n                        </InputSection>\n\n                        <InputSection>\n                            <label>Loan term in years</label>\n                            <Error>{error.years}</Error>\n                            <Input\n                                type='text'\n                                name='years'\n                                value={userValues.years}\n                                onChange={handleInputChange}\n                            />\n\n                        </InputSection>\n                        <InputSection><label>Or</label></InputSection>\n\n                        <InputSection>\n                            <label>Loan term in months</label>\n                            <Error>{error.months}</Error>\n                            <Input\n                                type='text'\n                                name='months'\n                                value={userValues.months}\n                                onChange={handleInputChange}\n                            />\n                        </InputSection>\n\n                        <InputSection>\n                            <label>Interest rate per year</label>\n                            <Error>{error.interest}</Error>\n                            <Span>\n                                <input\n                                    type='text'\n                                    name='interest'\n                                    value={userValues.interest}\n                                    onChange={handleInputChange}\n                                />\n                            %\n                            </Span>\n                        </InputSection>\n\n                        <SubmitButton>Calculate</SubmitButton>\n                    </Form>\n\n                    <Result>\n                        <p>Monthly Payments: </p>\n                        <h1>${results.monthlyPayment.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h1>\n                        <p>Total Principal Paid: ${results.totalPayment.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\n                        <Hr />\n                        <p>Total Interest Paid: ${results.totalInterest.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")} </p>\n                    </Result>\n\n                </AllContainer>\n            </Wrapper>\n        </Container>\n    )\n}\n\nexport default LoanCalculator\n\n","import React from 'react';\nimport LoanCalculator from './components/LoanCalculator';\nimport styled from 'styled-components';\nimport mediaQueries from '../src/components/media-queries';\n\nconst Container= styled.div`\nbackground: url(https://cdn.corporatefinanceinstitute.com/assets/Loans-1.jpeg);\nbackground-size: cover;\nbackground-position: center;\n${mediaQueries.desktop`\n  height:125vh;\n  width: 100vw;\n`}\n\n`\n\nfunction App() {\n  return (\n    <Container>\n        <LoanCalculator />\n    </Container>\n  );\n }\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}